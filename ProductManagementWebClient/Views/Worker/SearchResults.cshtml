@model BusinessObjects.DTOs.PaginatedResponseDto<BusinessObjects.DTOs.JobPostDto>
@{
    ViewData["Title"] = "Kết quả tìm kiếm";
    Layout = "_WorkerLayout";
}

<div class="bg-blue-50 py-6">
    <div class="container mx-auto px-4">
        <div class="flex flex-wrap items-center text-sm text-gray-600">
            <a asp-controller="Worker" asp-action="Index" class="hover:text-blue-600">Trang chủ</a>
            <span class="mx-2">/</span>
            <span class="text-gray-800">Kết quả tìm kiếm</span>
        </div>
    </div>
</div>

<div class="container mx-auto px-4 py-8">
    <div class="flex flex-col lg:flex-row gap-8">
        <!-- Search Filters Sidebar -->
        <div class="lg:w-1/4">
            <div class="bg-white rounded-lg shadow-md p-6 sticky top-4">
                <h3 class="text-lg font-semibold text-gray-900 mb-4">Lọc tìm kiếm</h3>

                <form asp-controller="Worker" asp-action="SearchResults" method="get">
                    <div class="space-y-4">
                        <div>
                            <label for="keyword" class="block text-sm font-medium text-gray-700 mb-1">Từ khóa</label>
                            <input type="text" id="keyword" name="keyword" value="@ViewBag.Keyword"
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500">
                        </div>

                        <div>
                            <label for="location" class="block text-sm font-medium text-gray-700 mb-1">Địa điểm</label>
                            <input type="text" id="location" name="location" value="@ViewBag.Location"
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500">
                        </div>

                        <div>
                            <label for="jobType" class="block text-sm font-medium text-gray-700 mb-1">Loại công việc</label>
                            <select id="jobType" name="jobType"
                                    class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500">
                                <option value="">Tất cả loại</option>
                                <option value="Toàn thời gian" selected="@(ViewBag.JobType == "Toàn thời gian")">Toàn thời gian</option>
                                <option value="Bán thời gian" selected="@(ViewBag.JobType == "Bán thời gian")">Bán thời gian</option>
                            </select>
                        </div>

                        <div>
                            <label for="minSalary" class="block text-sm font-medium text-gray-700 mb-1">Lương tối thiểu</label>
                            <input type="number" id="minSalary" name="minSalary" value="@ViewBag.MinSalary"
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500">
                        </div>

                        <div>
                            <label for="maxSalary" class="block text-sm font-medium text-gray-700 mb-1">Lương tối đa</label>
                            <input type="number" id="maxSalary" name="maxSalary" value="@ViewBag.MaxSalary"
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500">
                        </div>

                        <button type="submit" class="w-full bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md">
                            Áp dụng bộ lọc
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Search Results -->
        <div class="lg:w-3/4">
            <div class="bg-white rounded-lg shadow-md p-6">
                <div class="flex justify-between items-center mb-6">
                    <h1 class="text-2xl font-bold text-gray-900">
                        Kết quả tìm kiếm
                        @if (Model.TotalItems > 0)
                        {
                            <span class="text-gray-600 font-normal">(@Model.TotalItems việc làm được tìm thấy)</span>
                        }
                    </h1>
                </div>

                @if (Model.Items != null && Model.Items.Any())
                {
                    <div class="space-y-6">
                        @foreach (var job in Model.Items)
                        {
                            <div class="border border-gray-200 rounded-lg p-6 hover:shadow-md transition duration-300">
                                <div class="flex justify-between items-start">
                                    <div class="flex-1">
                                        <div class="flex items-start justify-between">
                                            <h3 class="text-xl font-semibold text-gray-900 mb-2">
                                                <a asp-controller="Worker" asp-action="JobDetails" asp-route-id="@job.Id" class="hover:text-blue-600">
                                                    @job.Title
                                                </a>
                                            </h3>
                                            <div class="flex items-center space-x-2">
                                                <span class="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded">
                                                    @job.PostType
                                                </span>
                                                @if (User.Identity.IsAuthenticated)
                                                {
                                                    <button type="button" class="wishlist-toggle text-gray-400 hover:text-red-500" data-job-id="@job.Id" data-is-in-wishlist="@job.IsInWishlist.ToString().ToLower()">
                                                        @if (job.IsInWishlist)
                                                        {
                                                            <svg class="w-5 h-5 text-red-500" fill="currentColor" viewBox="0 0 20 20">
                                                                <path fill-rule="evenodd" d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z" clip-rule="evenodd"></path>
                                                            </svg>
                                                        }
                                                        else
                                                        {
                                                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.682l-1.318-1.364a4.5 4.5 0 00-6.364 0z"></path>
                                                            </svg>
                                                        }
                                                    </button>
                                                }
                                            </div>
                                        </div>

                                        <div class="flex items-center text-gray-600 mb-3">
                                            <div class="flex items-center mr-4">
                                                <div class="w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center mr-2">
                                                    @if (!string.IsNullOrEmpty(job.EmployerAvatar))
                                                    {
                                                        <img src="@job.EmployerAvatar" alt="@job.EmployerName" class="w-8 h-8 rounded-full">
                                                    }
                                                    else
                                                    {
                                                        <span class="text-gray-600 font-semibold text-sm">@job.EmployerName.Substring(0, 1).ToUpper()</span>
                                                    }
                                                </div>
                                                <span class="text-sm">@job.EmployerName</span>
                                            </div>

                                            <div class="flex items-center mr-4">
                                                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                                </svg>
                                                <span class="text-sm">@job.Location</span>
                                            </div>

                                            <div class="flex items-center">
                                                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                                </svg>
                                                <span class="text-sm">@((DateTime.Now - job.CreatedAt.Value).TotalDays < 1 ? "Hôm nay" : $"{(int)(DateTime.Now - job.CreatedAt.Value).TotalDays} ngày trước")</span>
                                            </div>
                                        </div>

                                        <div class="flex flex-wrap gap-2 mb-4">
                                            <span class="bg-gray-100 text-gray-800 text-xs px-2 py-1 rounded">
                                                @job.JobType
                                            </span>
                                            @if (job.SalaryMin.HasValue && job.SalaryMax.HasValue)
                                            {
                                                <span class="bg-gray-100 text-gray-800 text-xs px-2 py-1 rounded">
                                                    @job.SalaryMin.Value.ToString("#,##0") - @job.SalaryMax.Value.ToString("#,##0") VNĐ
                                                </span>
                                            }
                                            else if (job.SalaryMin.HasValue)
                                            {
                                                <span class="bg-gray-100 text-gray-800 text-xs px-2 py-1 rounded">
                                                    Từ @job.SalaryMin.Value.ToString("#,##0") VNĐ
                                                </span>
                                            }
                                            else if (job.SalaryMax.HasValue)
                                            {
                                                <span class="bg-gray-100 text-gray-800 text-xs px-2 py-1 rounded">
                                                    Đến @job.SalaryMax.Value.ToString("#,##0") VNĐ
                                                </span>
                                            }
                                        </div>

                                        @if (!string.IsNullOrEmpty(job.Description))
                                        {
                                            <p class="text-gray-600 text-sm mb-4 line-clamp-2">
                                                @job.Description.Substring(0, Math.Min(job.Description.Length, 200))@(job.Description.Length > 200 ? "..." : "")
                                            </p>
                                        }

                                        <div class="flex justify-between items-center">
                                            <a asp-controller="Worker" asp-action="JobDetails" asp-route-id="@job.Id" class="text-blue-600 hover:text-blue-800 font-medium">
                                                Xem chi tiết →
                                            </a>

                                            @if (User.Identity.IsAuthenticated && User.IsInRole("Worker"))
                                            {
                                                <form asp-controller="Worker" asp-action="ApplyJob" method="post" class="inline">
                                                    <input type="hidden" name="jobId" value="@job.Id" />
                                                    <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm">
                                                        Ứng tuyển ngay
                                                    </button>
                                                </form>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    <!-- Pagination -->
                    @if (Model.TotalPages > 1)
                    {
                        <div class="mt-8 flex justify-center">
                            <nav class="flex items-center space-x-2">
                                @if (Model.CurrentPage > 1)
                                {
                                    <a asp-controller="Worker" asp-action="SearchResults"
                                       asp-route-keyword="@ViewBag.Keyword"
                                       asp-route-location="@ViewBag.Location"
                                       asp-route-jobType="@ViewBag.JobType"
                                       asp-route-minSalary="@ViewBag.MinSalary"
                                       asp-route-maxSalary="@ViewBag.MaxSalary"
                                       asp-route-categoryId="@ViewBag.CategoryId"
                                       asp-route-page="@(Model.CurrentPage - 1)"
                                       class="px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50">
                                        Trước
                                    </a>
                                }

                                @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                                {
                                    @if (i == Model.CurrentPage)
                                    {
                                        <span class="px-3 py-2 text-sm font-medium text-white bg-blue-600 border border-blue-600 rounded-md">
                                            @i
                                        </span>
                                    }
                                    else
                                    {
                                        <a asp-controller="Worker" asp-action="SearchResults"
                                           asp-route-keyword="@ViewBag.Keyword"
                                           asp-route-location="@ViewBag.Location"
                                           asp-route-jobType="@ViewBag.JobType"
                                           asp-route-minSalary="@ViewBag.MinSalary"
                                           asp-route-maxSalary="@ViewBag.MaxSalary"
                                           asp-route-categoryId="@ViewBag.CategoryId"
                                           asp-route-page="@i"
                                           class="px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50">
                                            @i
                                        </a>
                                    }
                                }

                                @if (Model.CurrentPage < Model.TotalPages)
                                {
                                    <a asp-controller="Worker" asp-action="SearchResults"
                                       asp-route-keyword="@ViewBag.Keyword"
                                       asp-route-location="@ViewBag.Location"
                                       asp-route-jobType="@ViewBag.JobType"
                                       asp-route-minSalary="@ViewBag.MinSalary"
                                       asp-route-maxSalary="@ViewBag.MaxSalary"
                                       asp-route-categoryId="@ViewBag.CategoryId"
                                       asp-route-page="@(Model.CurrentPage + 1)"
                                       class="px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50">
                                        Sau
                                    </a>
                                }
                            </nav>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center py-12">
                        <svg class="w-16 h-16 mx-auto text-gray-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                        <h3 class="text-lg font-medium text-gray-900 mb-1">Không tìm thấy việc làm</h3>
                        <p class="text-gray-600 mb-4">Hãy thử điều chỉnh tiêu chí tìm kiếm của bạn</p>
                        <a asp-controller="Worker" asp-action="Index" class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-md inline-block">
                            Xem tất cả việc làm
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Wishlist toggle functionality - FIXED VERSION
        document.querySelectorAll('.wishlist-toggle').forEach(button => {
            button.addEventListener('click', function () {
                const jobId = this.getAttribute('data-job-id');
                const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

                // Create FormData instead of JSON - this matches JobDetails.cshtml approach
                const formData = new FormData();
                formData.append('jobId', jobId);

                fetch('/Worker/ToggleWishlist', {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': token
                    },
                    body: formData  // Use FormData instead of JSON
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.error) {
                            console.error(data.error);
                            alert(data.error);
                            return;
                        }

                        // Update the button state
                        this.setAttribute('data-is-in-wishlist', data.isInWishlist);

                        if (data.isInWishlist) {
                            this.innerHTML = '<svg class="w-5 h-5 text-red-500" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z" clip-rule="evenodd"></path></svg>';
                            this.classList.add('text-red-500');
                            this.classList.remove('text-gray-400');
                        } else {
                            this.innerHTML = '<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.682l-1.318-1.364a4.5 4.5 0 00-6.364 0z"></path></svg>';
                            this.classList.remove('text-red-500');
                            this.classList.add('text-gray-400');
                        }

                        // Show success message
                        const message = document.createElement('div');
                        message.className = 'fixed top-4 right-4 bg-green-500 text-white px-4 py-2 rounded-md shadow-lg z-50';
                        message.textContent = data.message;
                        document.body.appendChild(message);

                        setTimeout(() => {
                            message.remove();
                        }, 3000);

                        // Update wishlist badge count if it exists
                        updateWishlistBadge();
                    }));
            });
        });
    </script>
}
