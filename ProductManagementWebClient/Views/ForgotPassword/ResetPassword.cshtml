@{
    ViewData["Title"] = "Đặt lại mật khẩu";
    Layout = "_AuthLayout";
}

<h2 class="auth-title">Đặt lại mật khẩu</h2>
<p class="auth-subtitle">Nhập mật khẩu mới cho tài khoản: <strong>@ViewBag.Email</strong></p>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <div>@error.ErrorMessage</div>
        }
    </div>
}

<form method="post" asp-controller="ForgotPassword" asp-action="ResetPassword">
    <input type="hidden" name="email" value="@ViewBag.Email" />

    <div class="form-group">
        <label for="newPassword" class="form-label">Mật khẩu mới</label>
        <div class="password-input-group">
            <input type="password" class="form-control" id="newPassword" name="newPassword"
                   placeholder="Nhập mật khẩu mới" minlength="6" required>
            <button type="button" class="password-toggle" id="toggleNewPassword">
                <i class="bi bi-eye"></i>
            </button>
        </div>
        <small class="form-text text-muted">Mật khẩu phải có ít nhất 6 ký tự</small>
    </div>

    <div class="form-group">
        <label for="confirmPassword" class="form-label">Xác nhận mật khẩu mới</label>
        <div class="password-input-group">
            <input type="password" class="form-control" id="confirmPassword" name="confirmPassword"
                   placeholder="Nhập lại mật khẩu mới" minlength="6" required>
            <button type="button" class="password-toggle" id="toggleConfirmPassword">
                <i class="bi bi-eye"></i>
            </button>
        </div>
    </div>

    <button type="submit" class="btn btn-primary">
        <i class="bi bi-shield-check me-2"></i>
        Đặt lại mật khẩu
    </button>
</form>

<div class="auth-links">
    <div class="text-center">
        <a href="@Url.Action("Index", "Login")">
            <i class="bi bi-arrow-left me-1"></i>
            Quay lại đăng nhập
        </a>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Toggle password visibility
            function setupPasswordToggle(toggleId, inputId) {
                const toggle = document.getElementById(toggleId);
                const input = document.getElementById(inputId);

                if (toggle && input) {
                    toggle.addEventListener('click', function (e) {
                        e.preventDefault();
                        const type = input.getAttribute('type') === 'password' ? 'text' : 'password';
                        input.setAttribute('type', type);

                        const icon = this.querySelector('i');
                        icon.classList.toggle('bi-eye');
                        icon.classList.toggle('bi-eye-slash');
                    });
                }
            }

            setupPasswordToggle('toggleNewPassword', 'newPassword');
            setupPasswordToggle('toggleConfirmPassword', 'confirmPassword');

            // Password confirmation validation
            const newPassword = document.getElementById('newPassword');
            const confirmPassword = document.getElementById('confirmPassword');

            function validatePasswordMatch() {
                if (confirmPassword.value && newPassword.value !== confirmPassword.value) {
                    confirmPassword.setCustomValidity('Mật khẩu xác nhận không khớp');
                } else {
                    confirmPassword.setCustomValidity('');
                }
            }

            newPassword.addEventListener('input', validatePasswordMatch);
            confirmPassword.addEventListener('input', validatePasswordMatch);
        });
    </script>
}
